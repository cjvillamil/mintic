// <auto-generated />
using System;
using EstanciaCaballos.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstanciaCaballos.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Caballo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fincaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("propietarioId")
                        .HasColumnType("int");

                    b.Property<string>("raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("veterinarioAsignadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("fincaId");

                    b.HasIndex("propietarioId");

                    b.HasIndex("veterinarioAsignadoId");

                    b.ToTable("Caballos");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.DocumentoVisita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("caballoAsociadoId")
                        .HasColumnType("int");

                    b.Property<string>("estadoDeAnimo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaVisita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("frecuenciaCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("frecuenciaRespiratoria")
                        .HasColumnType("int");

                    b.Property<int>("peso")
                        .HasColumnType("int");

                    b.Property<int?>("recomendacionVisitaId")
                        .HasColumnType("int");

                    b.Property<int>("temperatura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("caballoAsociadoId");

                    b.HasIndex("recomendacionVisitaId");

                    b.ToTable("DocumentosVisita");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Finca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Finca");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("caballoAsociadoId")
                        .HasColumnType("int");

                    b.Property<string>("fechaInicioHistoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("visitasRealizadas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("caballoAsociadoId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("cuidados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dosisMedicamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frecuenciaMedicamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicamentos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("EstanciaCaballos.App.Dominio.Persona");

                    b.Property<bool>("estaDisponible")
                        .HasColumnType("bit");

                    b.Property<string>("horarioAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Caballo", b =>
                {
                    b.HasOne("EstanciaCaballos.App.Dominio.Finca", "finca")
                        .WithMany()
                        .HasForeignKey("fincaId");

                    b.HasOne("EstanciaCaballos.App.Dominio.Persona", "propietario")
                        .WithMany()
                        .HasForeignKey("propietarioId");

                    b.HasOne("EstanciaCaballos.App.Dominio.Veterinario", "veterinarioAsignado")
                        .WithMany()
                        .HasForeignKey("veterinarioAsignadoId");

                    b.Navigation("finca");

                    b.Navigation("propietario");

                    b.Navigation("veterinarioAsignado");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.DocumentoVisita", b =>
                {
                    b.HasOne("EstanciaCaballos.App.Dominio.Caballo", "caballoAsociado")
                        .WithMany()
                        .HasForeignKey("caballoAsociadoId");

                    b.HasOne("EstanciaCaballos.App.Dominio.Recomendacion", "recomendacionVisita")
                        .WithMany()
                        .HasForeignKey("recomendacionVisitaId");

                    b.Navigation("caballoAsociado");

                    b.Navigation("recomendacionVisita");
                });

            modelBuilder.Entity("EstanciaCaballos.App.Dominio.Historia", b =>
                {
                    b.HasOne("EstanciaCaballos.App.Dominio.Caballo", "caballoAsociado")
                        .WithMany()
                        .HasForeignKey("caballoAsociadoId");

                    b.Navigation("caballoAsociado");
                });
#pragma warning restore 612, 618
        }
    }
}
